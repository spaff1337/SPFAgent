import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'maven-publish'
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.17"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    paperweight.paperDevBundle("1.21.4-R0.1-SNAPSHOT")
    implementation("org.javassist:javassist:3.30.2-GA")
    implementation("me.spaff:SPFAdditions:0.0.1")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.shadowJar
        }
    }
}

tasks {
    tasks.named('shadowJar', ShadowJar) {
        destinationDirectory = file('C:\\Users\\spaff\\Desktop\\paper 1.21.4')

        manifest {
            attributes(
                    'Premain-Class': 'org.example.Agent',
                    'Can-Redefine-Classes': 'true',
                    'Can-Retransform-Classes': 'true'
            )
        }
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}